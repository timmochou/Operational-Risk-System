--SELECT * FROM "ODS_USR"."ORCD_TFBUNIT"
--SELECT * FROM "DM_T_VIEW"."FR_ORCD_SNAPSHOT"
WITH ALL_TIME AS(
--今年1月～當前月+前五年所有月份
SELECT 
        'monthly' AS CATEGORY,
        TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE,'mm'),-ROWNUM + 1),'yyyy-mm') AS DATA_DATE,
        TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE,'mm'),-ROWNUM + 1),'yyyy-mm-dd') AS START_TIME,
        TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE,'mm'),-ROWNUM + 2)-1,'yyyy-mm-dd') AS END_TIME
FROM DUAL
CONNECT BY ROWNUM <= TO_CHAR(SYSDATE,'mm') + 60
UNION ALL
--今年第1季～當前季+前五年所有季
SELECT 
        'quarterly' AS CATEGORY,
        TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE,'q'),-ROWNUM*3 +3),'yyyy-"Q"q') AS DATA_DATE,
        TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE,'q'),-ROWNUM*3 +3),'yyyy-mm-dd') AS START_TIME,
        TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE,'q'),-ROWNUM*3 +6)-1,'yyyy-mm-dd') AS END_TIME
FROM DUAL
CONNECT BY ROWNUM <= TO_CHAR(SYSDATE,'q') + 20
UNION ALL
--今年H1(+H2)+前五年中所有半年
SELECT 
        'half-yearly' AS CATEGORY,
        CONCAT(TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE,'yyyy'),-ROWNUM*6 +6),'yyyy-"H"'),
        TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE,'yyyy'),-ROWNUM*6 +12)-1,'mm')/6) AS DATA_DATE,
        TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE,'yyyy'),-ROWNUM*6 +6),'yyyy-mm-dd') AS START_TIME,
        TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE,'yyyy'),-ROWNUM*6 +12)-1,'yyyy-mm-dd') AS END_TIME
FROM DUAL
CONNECT BY ROWNUM <= TO_CHAR(SYSDATE,'q')/2 + 10
UNION ALL
--當前年+前五年
SELECT 
        'yearly' AS CATEGORY,
        TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE,'yyyy'),-ROWNUM*12 +12),'yyyy') AS DATA_DATE,
        TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE,'yyyy'),-ROWNUM*12 +12),'yyyy-mm-dd') AS START_TIME,
        TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE,'yyyy'),-ROWNUM*12 +24)-1,'yyyy-mm-dd') AS END_TIME
FROM DUAL
CONNECT BY ROWNUM <=  6
),OTHER_SCORE AS(
SELECT
T1.DEPTID,
DEPT_NAME,
--
SUM(SCORE) AS OTHER_SCORE
FROM
"ODS_USR"."ORCD_TFBUNIT" T1
LEFT JOIN
"ODS_USR"."ORCD_MAN_SCORE" T2
ON 1=1
AND T1.DEPTID=T2.DEPTID
RIGHT JOIN
ALL_TIME T3
ON 1=1
AND T2.DATA_DATE BETWEEN TO_DATE(T3.START_TIME,'yyyy-mm-dd') AND TO_DATE(T3.END_TIME,'yyyy-mm-dd')
WHERE 1=1
AND T3.CATEGORY = '${P_TIME_UNIT}'
AND T3.START_TIME >= '${P_TIME_START}' AND T3.END_TIME <= '${P_TIME_END}'
GROUP BY
T1.DEPTID,
DEPT_NAME,
SCORE
ORDER BY
SCORE DESC
),BRANCH AS(
SELECT
        T1.DEPTID,
        T1.DEPT_NAME,
        T3.DATA_DATE,
        --總風險值
        CASE WHEN T3.START_TIME >= '${P_TIME_START}' AND T3.END_TIME <= '${P_TIME_END}' THEN SUM(T2.SCORE)
                --SUM(T2.SCORE)>'${P_LIMIT}' THEN ${P_LIMIT}
          ELSE 0 
          END AS RISK_SCORE,
        --其他項目扣分
        CASE WHEN T3.START_TIME >= '${P_TIME_START}' AND T3.END_TIME <= '${P_TIME_END}' THEN T4.OTHER_SCORE
                ELSE 0  
        END AS OTHER_SCORE,
    '分行' AS DEPT_CATEGORY,
    '分行' AS DEPT_LEVEL
FROM "ODS_USR"."ORCD_TFBUNIT" T1
LEFT JOIN "DM_T_VIEW"."FR_ORCD_SNAPSHOT" T2
ON T1.DEPTID=T2.DEPTID
LEFT JOIN OTHER_SCORE T4
ON T1.DEPTID=T4.DEPTID
LEFT JOIN ALL_TIME T3
ON T3.CATEGORY = '${P_TIME_UNIT}'
--前兩年同期
AND (T2.DATA_DATE BETWEEN ADD_MONTHS(TO_DATE(T3.START_TIME,'yyyy-mm-dd'),-12) AND ADD_MONTHS(TO_DATE(T3.END_TIME,'yyyy-mm-dd'),-12) OR T2.DATA_DATE BETWEEN ADD_MONTHS(TO_DATE(T3.START_TIME,'yyyy-mm-dd'),-24) AND ADD_MONTHS(TO_DATE(T3.END_TIME,'yyyy-mm-dd'),-24))
WHERE T1.DEPT_CATEGORY IS NOT NULL
AND T1.DEPT_LEVEL = '分行'
GROUP BY
T1.DEPTID,
T1.DEPT_NAME,
OTHER_SCORE,
T3.DATA_DATE,
T3.START_TIME,
T3.END_TIME
)
,BRANCH_FINAL AS(
SELECT
DEPTID,
DEPT_NAME,
DEPT_CATEGORY,
DEPT_LEVEL,
--因為是兩期資料，故P_LIMIT*2
('${P_LIMIT}'*2-
        CASE WHEN SUM(RISK_SCORE)>'${P_LIMIT}'*2 THEN ${P_LIMIT}*2
        ELSE SUM(RISK_SCORE) END )/'${P_PERFORMANCE_DIVIDED_BY}'*'${P_PERFORMANCE}'+
        CASE WHEN SUM(OTHER_SCORE) IS NULL THEN 0
                ELSE SUM(OTHER_SCORE)*'${P_OTHER}' 
        END AS SCORE
FROM
BRANCH
WHERE 1=1
GROUP BY
DEPTID,
DEPT_NAME,
DEPT_CATEGORY,
DEPT_LEVEL
)
,DIVISION AS(
--分行/區層級所有資料
SELECT 
        T2.UPDEPTID AS DEPTID,
        T2.UPDEPT_NAME AS DEPT_NAME,
        --總風險值
        CASE WHEN SUM(RISK_SCORE)>'${P_LIMIT}'*2 THEN ${P_LIMIT}*2
          ELSE SUM(RISK_SCORE) 
     END AS RISK_SCORE,
        --其他項目扣分
        OTHER_SCORE AS OTHER_SCORE,
        '分行' AS DEPT_CATEGORY,
        '區' AS DEPT_LEVEL
FROM BRANCH T1
LEFT JOIN "ODS_USR"."ORCD_TFBUNIT" T2
ON T1.DEPTID = T2.DEPTID
GROUP BY
T2.UPDEPTID,
T2.UPDEPT_NAME,
OTHER_SCORE
)
, DIVISION_FINAL AS(
SELECT
DEPTID,
DEPT_NAME,
DEPT_CATEGORY,
DEPT_LEVEL,
('${P_LIMIT}'*2-
                CASE WHEN SUM(RISK_SCORE)>'${P_LIMIT}'*2 THEN ${P_LIMIT}*2
          ELSE SUM(RISK_SCORE) END )/'${P_PERFORMANCE_DIVIDED_BY}'*'${P_PERFORMANCE}'+
        CASE WHEN SUM(OTHER_SCORE) IS NULL THEN 0
                ELSE SUM(OTHER_SCORE)*'${P_OTHER}' 
        END AS SCORE
FROM
DIVISION
WHERE 1=1
GROUP BY
DEPTID,
DEPT_NAME,
DEPT_CATEGORY,
DEPT_LEVEL
)
,DEPARTMENT AS(
--分行/處層級所有資料
SELECT 
        T2.UPDEPTID AS DEPTID,
        T2.UPDEPT_NAME AS DEPT_NAME,
        --總風險值
        CASE WHEN SUM(RISK_SCORE)>'${P_LIMIT}'*2 THEN ${P_LIMIT}*2
          ELSE SUM(RISK_SCORE) 
     END AS RISK_SCORE,
        --其他項目扣分
        OTHER_SCORE AS OTHER_SCORE,
        '分行' AS DEPT_CATEGORY,
        '處' AS DEPT_LEVEL
FROM DIVISION T1
LEFT JOIN "ODS_USR"."ORCD_TFBUNIT" T2
ON T1.DEPTID = T2.DEPTID
GROUP BY
T2.UPDEPTID,
T2.UPDEPT_NAME,
OTHER_SCORE
)
,DEPARTMENT_FINAL AS(
SELECT
DEPTID,
DEPT_NAME,
DEPT_CATEGORY,
DEPT_LEVEL,
('${P_LIMIT}'*2-
                CASE WHEN SUM(RISK_SCORE)>'${P_LIMIT}'*2 THEN ${P_LIMIT}*2
          ELSE SUM(RISK_SCORE) END )/'${P_PERFORMANCE_DIVIDED_BY}'*'${P_PERFORMANCE}'+
        CASE WHEN SUM(OTHER_SCORE) IS NULL THEN 0
                ELSE SUM(OTHER_SCORE)*'${P_OTHER}' 
        END AS SCORE
FROM
DEPARTMENT
WHERE 1=1
GROUP BY
DEPTID,
DEPT_NAME,
DEPT_CATEGORY,
DEPT_LEVEL
),HEADQUARTER_UNIT AS(
--總行單位彙整到部處層級
SELECT 
        DEPTID,
        DEPT_NAME,
        UPDEPTID,
        UPDEPT_NAME,
        CONNECT_BY_ROOT(DEPT_NAME) AS FATHER_NAME,
        CONNECT_BY_ROOT(DEPTID) AS FATHER_ID
FROM ODS_USR.ORCD_TFBUNIT
--若為最底層單位則保留原單位，非最底層單位則尋找下階單位
START WITH DEPT_LEVEL = '總行'
CONNECT BY PRIOR DEPTID = UPDEPTID
),HEADQUARTER AS(
SELECT
        T1.FATHER_ID AS DEPTID,
        T1.FATHER_NAME AS DEPT_NAME,
        T3.DATA_DATE,
        --總風險值
        CASE WHEN T3.START_TIME >= '${P_TIME_START}' AND T3.END_TIME <= '${P_TIME_END}' THEN SUM(T2.SCORE)
                --SUM(T2.SCORE)>'${P_LIMIT}' THEN ${P_LIMIT}
          ELSE 0 
     END AS RISK_SCORE,
        --其他項目扣分
        CASE WHEN T3.START_TIME >= '${P_TIME_START}' AND T3.END_TIME <= '${P_TIME_END}' THEN T4.OTHER_SCORE
                ELSE 0  
        END AS OTHER_SCORE,
    '總行' AS DEPT_CATEGORY,
    '總行' AS DEPT_LEVEL
FROM HEADQUARTER_UNIT T1
LEFT JOIN "DM_T_VIEW"."FR_ORCD_SNAPSHOT" T2
ON T1.DEPTID=T2.DEPTID
LEFT JOIN OTHER_SCORE T4
ON T1.DEPTID=T4.DEPTID
LEFT JOIN ALL_TIME T3
ON T3.CATEGORY = '${P_TIME_UNIT}'
--前兩年同期
AND (T2.DATA_DATE BETWEEN ADD_MONTHS(TO_DATE(T3.START_TIME,'yyyy-mm-dd'),-12) AND ADD_MONTHS(TO_DATE(T3.END_TIME,'yyyy-mm-dd'),-12) OR T2.DATA_DATE BETWEEN ADD_MONTHS(TO_DATE(T3.START_TIME,'yyyy-mm-dd'),-24) AND ADD_MONTHS(TO_DATE(T3.END_TIME,'yyyy-mm-dd'),-24))
WHERE 1=1
GROUP BY
T1.FATHER_ID,
T1.FATHER_NAME,
T4.OTHER_SCORE,
T3.DATA_DATE,
T3.START_TIME,
T3.END_TIME
),HEADQUARTER_FINAL AS(
SELECT
DEPTID,
DEPT_NAME,
DEPT_CATEGORY,
DEPT_LEVEL,
('${P_LIMIT}'*2-
                CASE WHEN SUM(RISK_SCORE)>'${P_LIMIT}'*2 THEN ${P_LIMIT}*2
          ELSE SUM(RISK_SCORE) END )/'${P_PERFORMANCE_DIVIDED_BY}'*'${P_PERFORMANCE}'+
        CASE WHEN SUM(OTHER_SCORE) IS NULL THEN 0
                ELSE SUM(OTHER_SCORE)*'${P_OTHER}' 
        END AS SCORE
FROM
HEADQUARTER
WHERE 1=1
GROUP BY
DEPTID,
DEPT_NAME,
DEPT_CATEGORY,
DEPT_LEVEL
),ALL_DEPT AS(
SELECT * FROM BRANCH_FINAL
UNION ALL
SELECT * FROM DIVISION_FINAL
UNION ALL
SELECT * FROM DEPARTMENT_FINAL
UNION ALL
SELECT * FROM HEADQUARTER_FINAL
),BASE AS(
SELECT
        ROW_NUMBER() OVER(ORDER BY SCORE DESC) ROW_NUM,
        T1.DEPTID,
        T2.DEPT_NAME,
        SCORE
        --CASE WHEN SCORE>'${P_LIMIT}' THEN ${P_LIMIT}
        --        ELSE SCORE END AS SCORE
FROM ALL_DEPT T1
LEFT JOIN "ODS_USR"."ORCD_TFBUNIT" T2
ON T1.DEPTID = T2.DEPTID
WHERE 1=1
${IF(LEN(P_ENTITY_UNIT)=0,"","AND T1.DEPT_CATEGORY = '" + P_ENTITY_UNIT + "'")} 
${IF(LEN(P_ENTITY)=0,"","AND T1.DEPT_LEVEL = '" + P_ENTITY + "'")} 
),TOP50_DATA AS(
--前50%資料
SELECT
        *
FROM BASE
WHERE ROW_NUM <= (SELECT 0.5*COUNT(*) FROM BASE)
),BOT50_DATA AS(
--後50%資料
SELECT
        *
FROM BASE
WHERE ROW_NUM > (SELECT 0.5*COUNT(*) FROM BASE)
)
--危險值
SELECT
        --總分
        SUM(SCORE)/2,
        --單位數
        COUNT(DEPT_NAME),
        --平均數
        SUM(SCORE)/(COUNT(DEPT_NAME)*2)
FROM TOP50_DATA T1
UNION ALL
--預警值
SELECT
        --總分
        SUM(SCORE)/2,
        --單位數
        COUNT(DEPT_NAME),
        --平均數
        SUM(SCORE)/(COUNT(DEPT_NAME)*2)
FROM BOT50_DATA