WITH DEPT_BASE AS(
--組織基底
SELECT
        N'全行' AS DEPT_NAME,
        N'0000' AS UPDEPT_NAME,
        N'0001' AS DEPTID,
        N'0000' AS UPDEPTID
FROM DUAL
UNION ALL
SELECT
        N'總行' AS DEPT_NAME,
        N'全行' AS UPDEPT_NAME,
        N'0002' AS DEPTID,
        N'0001' AS UPDEPTID
FROM DUAL
UNION ALL
SELECT
        N'分行' AS DEPT_NAME,
        N'全行' AS UPDEPT_NAME,
        N'0003' AS DEPTID,
        N'0001' AS UPDEPTID
FROM DUAL
),DEPT_SYS AS(
--結合系統組織
SELECT
        DEPT_NAME,
        UPDEPT_NAME,
        DEPTID,
        UPDEPTID
FROM DEPT_BASE
UNION ALL
SELECT
        DEPT_NAME,
        CASE WHEN  DEPT_NAME LIKE '分行%處' THEN N'分行'
                WHEN PARENT_NODE_NAME = 'BUTTW00016' THEN N'總行'
                ELSE UPDEPT_NAME END AS UPDEPT_NAME,
        DEPTID,
        CASE WHEN  DEPT_NAME LIKE '分行%處' THEN N'0003'
                WHEN PARENT_NODE_NAME = 'BUTTW00016' THEN N'0002'
                ELSE PARENT_NODE_NAME END AS UPDEPTID
FROM "ODS_BANK"."DG_HRIS_BUDEPT"
WHERE SETID = 'BUTTW'
),DEPT_TREE AS(
--組成組織樹
SELECT 
        DEPTID,
        DEPT_NAME,
        UPDEPTID,
        UPDEPT_NAME,
        CONNECT_BY_ROOT(DEPT_NAME) AS FATHER,
        CONNECT_BY_ROOT(DEPTID) AS FATHER_ID
FROM DEPT_SYS
START WITH DEPT_NAME = '${P_ENTITY}'
CONNECT BY PRIOR DEPTID = UPDEPTID
),ALL_TIME AS(
--今年1月～當前月+前五年所有月份
SELECT 
        'monthly' AS CATEGORY,
        TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE,'mm'),-ROWNUM + 1),'yyyy-mm') AS DATA_DATE,
        ADD_MONTHS(TRUNC(SYSDATE,'mm'),-ROWNUM + 1) AS START_TIME,
        ADD_MONTHS(TRUNC(SYSDATE,'mm'),-ROWNUM + 2)-1 AS END_TIME
FROM DUAL
CONNECT BY ROWNUM <= TO_CHAR(SYSDATE,'mm') + 60
UNION ALL
--今年第1季～當前季+前五年所有季
SELECT 
        'quarterly' AS CATEGORY,
        TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE,'q'),-ROWNUM*3 +3),'yyyy-"Q"q') AS DATA_DATE,
        ADD_MONTHS(TRUNC(SYSDATE,'q'),-ROWNUM*3 +3) AS START_TIME,
        ADD_MONTHS(TRUNC(SYSDATE,'q'),-ROWNUM*3 +6)-1 AS END_TIME
FROM DUAL
CONNECT BY ROWNUM <= TO_CHAR(SYSDATE,'q') + 20
UNION ALL
--今年H1(+H2)+前五年中所有半年
SELECT 
        'half-yearly' AS CATEGORY,
        CONCAT(TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE,'yyyy'),-ROWNUM*6 +6),'yyyy-"H"'),
        TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE,'yyyy'),-ROWNUM*6 +12)-1,'mm')/6) AS DATA_DATE,
        ADD_MONTHS(TRUNC(SYSDATE,'yyyy'),-ROWNUM*6 +6) AS START_TIME,
        ADD_MONTHS(TRUNC(SYSDATE,'yyyy'),-ROWNUM*6 +12)-1 AS END_TIME
FROM DUAL
CONNECT BY ROWNUM <= TO_CHAR(SYSDATE,'q')/2 + 10
UNION ALL
--當前年+前五年
SELECT 
        'yearly' AS CATEGORY,
        TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE,'yyyy'),-ROWNUM*12 +12),'yyyy') AS DATA_DATE,
        ADD_MONTHS(TRUNC(SYSDATE,'yyyy'),-ROWNUM*12 +12) AS START_TIME,
        ADD_MONTHS(TRUNC(SYSDATE,'yyyy'),-ROWNUM*12 +24)-1 AS END_TIME
FROM DUAL
CONNECT BY ROWNUM <=  6
),KRI AS(
--串KRI資料
SELECT
T3.DATA_DATE AS RANGE,
--
CASE WHEN ('${P_ENTITY}' = '全行' AND SUM(T2.RED) IS NOT NULL) THEN SUM(CEIL(T2.RED))
        WHEN SUM(T2.RED) IS NOT NULL THEN SUM(T2.RED)
        ELSE 0 END AS 紅燈,
--
CASE WHEN ('${P_ENTITY}' = '全行' AND SUM(T2.YELLOW) IS NOT NULL) THEN SUM(CEIL(T2.YELLOW))
        WHEN SUM(T2.YELLOW) IS NOT NULL THEN SUM(T2.YELLOW)
        ELSE 0 END AS 黃燈
FROM 
DEPT_TREE T1
LEFT JOIN
"ODS_USR"."ORCD_KRI" T2
ON T1.DEPTID = T2.DEPARTMENT_CODE
${IF(P_ENTITY = '全行',"AND T2.KRI_BR_COUNT = 1","")}
RIGHT JOIN
ALL_TIME T3
ON T2.DATA_ENDDT BETWEEN T3.START_TIME AND T3.END_TIME
WHERE 1=1
AND T3.CATEGORY = '${P_TIME_UNIT}'
${IF(LEN(P_TIME_START)=0,"","AND T3.DATA_DATE >= '" + P_TIME_START + "'")} 
${IF(LEN(P_TIME_END)=0,"","AND T3.DATA_DATE <= '" + P_TIME_END + "'")}
GROUP BY
T3.DATA_DATE
ORDER BY
T3.DATA_DATE DESC), SCORE AS(
SELECT 
        T3.DATA_DATE AS RANGE,
        CASE WHEN SUM(T2.SCORE) IS NULL THEN 0
                ELSE SUM(T2.SCORE)
        END AS SCORE
FROM
DEPT_TREE T1
LEFT JOIN
"ODS_USR"."ORCD_TFBUNIT" T4
ON 1=1
AND T1.DEPTID=T4.DEPTID
LEFT JOIN
"DM_T_VIEW"."FR_ORCD_SNAPSHOT" T2
ON 1=1
AND  T1.DEPTID=T2.DEPTID
RIGHT JOIN
ALL_TIME T3
ON T2.DATA_DATE BETWEEN T3.START_TIME AND T3.END_TIME
WHERE
1=1 
AND T2.CATEGORY = 'KRI'
AND T3.CATEGORY = '${P_TIME_UNIT}'
${IF(LEN(P_TIME_START)=0,"","AND T3.DATA_DATE >= '" + P_TIME_START + "'")} 
${IF(LEN(P_TIME_END)=0,"","AND T3.DATA_DATE <= '" + P_TIME_END + "'")}
GROUP BY T3.DATA_DATE
)
SELECT
        T1.RANGE,
        T1.紅燈,
        T1.黃燈,
        T2.SCORE
FROM
KRI T1
LEFT JOIN
SCORE T2
ON T1.RANGE = T2.RANGE